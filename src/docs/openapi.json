{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "Greeting Server",
    "description": "Greet all members whose birthday is today"
  },
  "host": "localhost:8000",
  "basePath": "/",
  "tags": [
    {
      "name": "default"
    },
    {
      "name": "Greet"
    },
    {
      "name": "Users"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Health Check",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "ping": {
                  "type": "string",
                  "example": "pong"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/v4/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get All Users",
        "description": "",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a New User",
        "description": "",
        "parameters": [
          {
            "name": "userData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWithoutId"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/v4/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User by Id",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/UserNotFound"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Upadte User",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWithoutId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Created"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/UserNotFound"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a User",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/UserNotFound"
            }
          }
        }
      }
    },
    "/api/v4/greeting/": {
      "get": {
        "tags": [
          "Greet"
        ],
        "summary": "Greet Users",
        "description": "",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "name": "day",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GreetResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GreetResponse": {
      "type": "string",
      "example": "Subject: Happy birthday!\nHappy birthday, dear Doe, John!\n"
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "clbl1m9d20000976xz5frzady"
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "gender": {
          "type": "string",
          "example": "MALE"
        },
        "dateOfBirth": {
          "type": "string",
          "example": "1987-06-05T00:00:00.000Z"
        },
        "email": {
          "type": "string",
          "example": "johndoe@example.com"
        }
      }
    },
    "UserWithoutId": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "gender": {
          "type": "string",
          "example": "MALE"
        },
        "dateOfBirth": {
          "type": "string",
          "example": "1987-06-05T00:00:00.000Z"
        },
        "email": {
          "type": "string",
          "example": "johndoe@example.com"
        }
      }
    },
    "UserNotFound": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "User not found"
        }
      }
    }
  }
}